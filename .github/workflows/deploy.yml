
name: Release & Deploy to Netlify

on:
  push:
    branches:
      - main
      - dev

permissions:
  pull-requests: write
  issues: write
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.release.outputs.new_release_published }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm ci
      - name: Run semantic-release wrapper
        id: release
        run: node scripts/release-wrapper.mjs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs:
      - release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build

      - name: Deploy to Netlify (prod or preview)
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "Deploying to Netlify production"
            npx netlify deploy --prod --dir=dist \
              --site=$NETLIFY_SITE_ID \
              --auth=$NETLIFY_AUTH_TOKEN
          elif [[ "${GITHUB_REF_NAME}" == "dev" ]]; then
            echo "Deploying to Netlify dev preview"
            npx netlify deploy --dir=dist \
              --alias=preview \
              --site=$NETLIFY_SITE_ID \
              --auth=$NETLIFY_AUTH_TOKEN
          else
            echo "Not a deploy branch"
          fi
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
